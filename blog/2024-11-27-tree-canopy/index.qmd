---
title: 'Greenspace exposure: Finding tree canopy cover'
author: Silvia CanelÃ³n
date: '2024-11-27'
image: featured.png
categories:
  - R
  - tutorial
  - maps
  - greenspace
  - rspatial
  - sf
  - mapview
subtitle: >
  An R tutorial on finding vector polygon intersections using spatial tools.
description: '' # Text that shows below the tags, not on listing page
links:
- icon: pin-map-fill
  name: Collection of maps
  url: /project/2024-06-16-ccd-sips
draft: true
---


## Notes

- [GitHub - ivelasq/leaidr: An R Package for U.S. School District Shapefiles](https://github.com/ivelasq/leaidr) -- school district shape files
- [9 Walkthrough 3: Using school-level aggregate data to illuminate educational inequities | Data Science in Education Using R](https://datascienceineducation.com/c09#data-sources-2) - data sources for aggregate datasets related to education
- [GitHub - data-edu/dataedu: An R package associated with the Data Science in Education Using R book](https://github.com/data-edu/dataedu) - Data Edu package
- [Schools Parcels - OpenDataPhilly](https://opendataphilly.org/datasets/schools-parcels/)
- [Schools - OpenDataPhilly](https://opendataphilly.org/datasets/schools/)
- [PPR Tree Canopy - OpenDataPhilly](https://opendataphilly.org/datasets/ppr-tree-canopy/)
- [OSF | PAD-US-AR](https://osf.io/pwdsg/)
- Research:
  - [Urban Greenspaces: Bridging Mental Health Disparities | US Forest Service Research and Development](https://research.fs.usda.gov/nrs/projects/urbangreenspaces#research) - "Researchers found that higher levels of residential tree cover, particularly within a 250-meter radius of an individuals' home, were associated with significantly better mental health. "

```{r setup}
#| include: false

library(tidyverse)
library(sf)
library(mapview)

data_dir <- "/Users/scanelon/Sync/Repos/3-Resources/Data/Open Data Philly"
```

```{r import}
#| include: false

philly <- read_sf(paste(data_dir, "clean", "city_boundaries", "phl_county_line.gpkg", sep = "/"))

schools <- read_sf(paste(data_dir, "raw", "schools", "schools_parcels.geojson", sep = "/"))

tree_canopy <- read_sf(paste(data_dir, "clean", "tree_canopy", "tree_canopy_2018.gpkg", sep = "/"))

parks <- read_sf(paste(data_dir, "raw", "parks", "PPR_Properties.geojson", sep = "/")) |> 
  janitor::clean_names()

```

```{r wrangling}
#| include: false
schools <- schools |> 
  mutate(across(.cols = c(TYPE, TYPE_SPECIFIC),
                .fns = factor)) |> 
  mutate(TYPE = fct_recode(TYPE,
                           "PUBLIC" = "1",
                           "CHARTER" = "2",
                           "PRIVATE" = "3"))
```

## Wrangling

```{r wrangling}
# renaming variables ---
schools <- schools |> 
  janitor::clean_names() |> 
  select(school_id = objectid, school_name_label, 
         school_address = street_address, zip_code, 
         grade_level, grade_org, enrollment, 
         type, type_specific, geometry)

parks <- parks |> 
  janitor::clean_names() |> 
  select(park_id = objectid, public_name, 
         park_address = address_brt,
         property_classification, geometry)

tree_canopy <- tree_canopy |> select(geometry = geom)
```

Want to use metric units relative to our location, so we will reproject to an appropriate Coordinate Reference System (CRS) like EPSG:6564.

```{r}
# CRS projections ----
philly <- philly |> st_transform(crs = "EPSG:6564")
schools <- schools |> st_transform(crs = "EPSG:6564")
tree_canopy <- tree_canopy |> st_transform(crs = "EPSG:6564")
parks <- parks |> st_transform(crs = "EPSG:6564")
```

## Defining area buffer

Resource: [Urban Greenspaces: Bridging Mental Health Disparities | US Forest Service Research and Development](https://research.fs.usda.gov/nrs/projects/urbangreenspaces#research)
    > Researchers found that higher levels of residential tree cover, particularly within a 250-meter radius of an individuals' home, were associated with significantly better mental health.

```{r}
buffer_size = 250 # meters (determined by CRS)
  
# calculate buffer area
buffer_area <- pi*(buffer_size^2)

# creating buffer around home addresses
schools_df <-
  schools |> 
  st_buffer(dist = buffer_size) # radius

# finding intersecting areas between home buffers and tree canopy
step_1 <-
  st_intersection(schools_df, tree_canopy) |> 
  mutate(intersect_area = st_area(geometry))
```


## Calculating percent tree canopy cover

```{r}
# finding percent tree canopy cover
step_2 <-
  step_1 |> 
  group_by(school_id, school_address) |> 
  # calculate area, including any polygon overlaps
  summarize(area_tree_canopy_w_overlaps = sum(intersect_area)) |> 
  # calculate exact area using polygon geometry
  mutate(area_tree_canopy = st_area(geometry)) |> 
  # calculate percentage
  mutate(area_tree_canopy_percent = round(as.numeric(area_tree_canopy/buffer_area*100), 2))
```

## Joining intersecting area to schools dataframe

```{r}
# join intersect area to cohort dataframe
step_3 <-
  schools |> 
  left_join(step_2 |> st_drop_geometry()) |> 
  select(-c(area_tree_canopy_w_overlaps)) |> 
  # convert m^2 variable to continuous
  mutate(area_tree_canopy = as.numeric(area_tree_canopy)) |> 
  # assign areas of 0 for homes not intersecting w/ tree canopy
  mutate(
    across(
      .cols = c(area_tree_canopy, area_tree_canopy_percent),
      .fns = ~if_else(is.na(.), 0, .))) |>
relocate(geometry, .after = last_col())
```

## Adding labels

```{r}
schools_with_tree_canopy_cover <-
  step_3 |> 
  # add labels
  labelled::set_variable_labels(
    area_tree_canopy = "Area tree canopy cover within buffer (m^2)",
    area_tree_canopy_percent = "Percent tree canopy cover within buffer")
```

## Summary: Tree cover

```{r}
schools_with_tree_canopy_cover |> 
  st_drop_geometry() |> 
  gtsummary::tbl_summary(
    include = c(area_tree_canopy, 
                area_tree_canopy_percent),
    by = type,
    type = list(
      c(area_tree_canopy, area_tree_canopy_percent) ~ "continuous2"
    ),
    statistic = list(
      c(area_tree_canopy, area_tree_canopy_percent) ~ c(
        "{mean} ({sd})",
        "{median} ({min}, {max})")
    )
  ) |> 
  gtsummary::add_overall() |> 
  gtsummary::add_p()

summary(schools_with_tree_canopy_cover$area_tree_canopy_percent)
```


## Repeat for percent park cover

```{r}
# finding intersecting areas between home buffers and tree canopy
step_1 <-
  st_intersection(schools_df, st_make_valid(parks)) |> 
  mutate(intersect_area = st_area(geometry))

# finding percent tree canopy cover
step_2 <-
  step_1 |> 
  group_by(school_id, school_address) |> 
  # calculate area, including any polygon overlaps
  summarize(area_parks_w_overlaps = sum(intersect_area)) |> 
  # calculate exact area using polygon geometry
  mutate(area_parks = st_area(geometry)) |> 
  # calculate percentage
  mutate(area_parks_percent = round(as.numeric(area_parks/buffer_area*100), 2))

# join intersect area to cohort dataframe
step_3 <-
  schools |> 
  left_join(step_2 |> st_drop_geometry()) |> 
  select(-c(area_parks_w_overlaps)) |> 
  # convert m^2 variable to continuous
  mutate(area_parks = as.numeric(area_parks)) |> 
  # assign areas of 0 for homes not intersecting w/ tree canopy
  mutate(
    across(
      .cols = c(area_parks, area_parks_percent),
      .fns = ~if_else(is.na(.), 0, .))) |>
relocate(geometry, .after = last_col())

schools_with_park_cover <-
  step_3 |> 
  # add labels
  labelled::set_variable_labels(
    area_parks = "Area park cover within buffer (m^2)",
    area_parks_percent = "Percent park cover within buffer")
```

## Summary: Park cover

```{r}
schools_with_park_cover |> 
  st_drop_geometry() |> 
  gtsummary::tbl_summary(
    include = c(area_parks, 
                area_parks_percent),
    by = type,
    type = list(
      c(area_parks, area_parks_percent) ~ "continuous2"
    ),
    statistic = list(
      c(area_parks, area_parks_percent) ~ c(
        "{mean} ({sd})",
        "{median} ({min}, {max})")
    )
  ) |> 
  gtsummary::add_overall() |> 
  gtsummary::add_p()
```


```{r export}
#| include: false

write_rds(
  x = schools_with_tree_canopy_cover,
  file = here::here("blog", "2024-11-27-tree-canopy", 
                    "output", "schools_w_tree_canopy_cover.Rds"))

write_csv(
  x = schools_with_tree_canopy_cover,
  file = here::here("blog", "2024-11-27-tree-canopy", 
                    "output", "schools_w_tree_canopy_cover.Rds"))
```
