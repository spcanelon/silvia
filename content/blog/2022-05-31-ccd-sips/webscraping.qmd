---
title: "webscraping"
format: html
---

```{r setup, eval=TRUE, include=FALSE}
xfun::pkg_attach("tidyverse", "rvest", "robotstxt", "here", "ggmap", "leaflet")
```

## Checking the page

```{r webscrape, echo=FALSE}
# check page's terms of service
get_robotstxt("https://centercityphila.org/explore-center-city/ccd-sips/sips-list-view")

```

## Extract information

```{r eval=TRUE}
# save page
url <- "https://centercityphila.org/explore-center-city/ccd-sips/sips-list-view?page=1"
html1 <- read_html(url)

# extract table info
table1 <- 
  html1 %>% 
  html_node("table") %>% 
  html_table()

links <- 
  html1 %>% 
  html_elements(".o-table__tag.ccd-text-link") %>% 
  html_attr("href") %>% 
  as_tibble()

table1Mod <-
  bind_cols(table1, links) %>% 
  mutate(Specials = paste0(url, value)) %>% 
  select(-c(`CCD SIPS Specials`, value))

table1Mod %>% 
  head()
```

## Create scraping function

```{r, eval=TRUE}
getTables <- function(pageNumber) {
  Sys.sleep(2)
  
  url <- paste0("https://centercityphila.org/explore-center-city/ccd-sips/sips-list-view?page=", pageNumber)
  
  html <- read_html(url)
  
  table <- 
    html %>% 
    html_node("table") %>%
    html_table()
  
  links <- 
    html %>% 
    html_elements(".o-table__tag.ccd-text-link") %>% 
    html_attr("href") %>% 
    as_tibble()
  
  tableSpecials <<-
    bind_cols(table, links) %>% 
    mutate(Specials = paste0(url, value)) %>% 
    select(-c(`CCD SIPS Specials`, value))
}
```

## Scrape all pages

```{r, eval=TRUE}
table2 <-
  map_df(2:3, getTables) 

table <- 
  bind_rows(table1Mod, table2)

table %>% 
  head()

write_rds(table,
          file = here("content/blog/2022-05-28-ccd-sips/specialsScraped.Rds"))
```


## Geocoding

- [dkahle/ggmap: A package for plotting maps in R with ggplot2](https://github.com/dkahle/ggmap)
- [Google Maps Platform Documentation  |  Geocoding API  |  Google Developers](https://developers.google.com/maps/documentation/geocoding/?csw=1)
- [Geocoding Service  |  Maps JavaScript API  |  Google Developers](https://developers.google.com/maps/documentation/javascript/geocoding)
- [Geocoding API  |  Google Developers](https://developers.google.com/maps/documentation/geocoding/usage-and-billing)

Created a new credential with 2 restrictions: Geocoding API and Geolocation API

- Google Cloud Platform > Specific Project > APIs and Services > Credentials

```{r eval=FALSE}
specials <- read_rds(file = here::here("content/blog/2022-05-28-ccd-sips/specialsScraped.Rds"))

# Used ggmap::register_google(key = "[your key]") to temporarily register new API key

specials_ggmap <- 
  specials %>% 
  mutate_geocode(Address)

specials_ggmap %>% 
  rename(Longitude = lon,
         Latitude = lat) %>%
  write_rds(file = here("content/blog/2022-05-28-ccd-sips/specialsGeocoded.Rds"))

```

## Creating the map

- [Leaflet for R - Introduction](https://rstudio.github.io/leaflet/)

```{r import-map-data}
# import data
specials <- read_rds(here("content/blog/2022-05-28-ccd-sips/specialsGeocoded.Rds"))
```

```{r create-map, code = readLines(here("content/blog/2022-05-28-ccd-sips/map.R"))}
# https://community.rstudio.com/t/how-to-write-r-script-into-rmd-as-functioning-code-chunk/37453/5
```
